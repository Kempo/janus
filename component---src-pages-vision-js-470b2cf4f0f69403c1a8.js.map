{"version":3,"sources":["webpack:///./src/pages/vision.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/header.js","webpack:///./src/components/layout.js","webpack:///./src/components/seo.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","_components_seo__WEBPACK_IMPORTED_MODULE_2__","visionPage","a","createElement","title","keywords","d","graphql","StaticQueryContext","StaticQuery","useStaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","React","createContext","props","Consumer","staticQueryData","data","query","render","children","useContext","context","Error","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","Header","siteTitle","react_default","style","background","marginBottom","margin","maxWidth","padding","gatsby_browser_entry","className","to","defaultProps","Layout","Fragment","components_header","paddingTop","height","backgroundColor","Date","getFullYear","_755544856","node","SEO","description","lang","meta","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","metaDescription","site","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","name","content","property","author","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","array","arrayOf"],"mappings":"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","file":"component---src-pages-vision-js-470b2cf4f0f69403c1a8.js","sourcesContent":["import React from \"react\";\n\nimport Layout from \"../components/layout\"\n\nimport SEO from \"../components/seo\"\n\n/**\n * what the company envisions\n */\nconst visionPage = () => (\n    <Layout> \n        <SEO title=\"Our Vision\" keywords={[`janus`, `application`, `react`]} />\n        <h1> This is our vision. </h1>\n        <p> We imagine a world where your data is managed your way. </p>\n    </Layout>\n)\nexport default visionPage;","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import { Link } from \"gatsby\"\nimport PropTypes from \"prop-types\"\nimport React from \"react\"\nimport \"./header.css\";\n\nconst Header = ({ siteTitle }) => (\n  <header\n    style={{\n      background: `rebeccapurple`,\n      marginBottom: `1.45rem`,\n    }}\n  >\n    <div\n      style={{\n        margin: `0 auto`,\n        maxWidth: 960,\n        padding: `1rem .75rem`,\n      }}\n    >\n      <div>\n        <h4 style={{ margin: 0 }}>\n          <Link className=\"nav-link\" to=\"/\"> Home </Link>\n          <Link className=\"nav-link\" to=\"/about\"> About </Link>\n          <Link className=\"nav-link\" to=\"/vision\"> Vision </Link>\n        </h4>\n      </div>\n    </div>\n  </header>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query SiteTitleQuery {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <>\n        <Header /* siteTitle={data.site.siteMetadata.title}*/ />\n        <div\n          style={{\n            margin: `0 auto`,\n            maxWidth: 960,\n            padding: `0px 1.0875rem 1.45rem`,\n            paddingTop: 0,\n          }}\n        >\n\n          <main style={{ height: \"100vh\", backgroundColor: \"\"}}>{children}</main>\n          <footer>\n            <div> © {new Date().getFullYear()} </div>\n            <div> Built with love, by Aaron Chen. </div>\n          </footer>\n        </div>\n      </>\n    )}\n  />\n)\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { StaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n"],"sourceRoot":""}